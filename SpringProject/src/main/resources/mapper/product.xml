<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.spring.model.ProductDAO">

	<!-- ::: product_list ::: -->
	
	<select id="productTotalRecord" resultType="int">
		select count(*) from product
	</select>
	
	<select id="productList" parameterType="com.spring.model.PageDTO" resultType="com.spring.model.ProductDTO">
		<![CDATA[ 
			select * from (select p.*, row_number() over(order by pro_no desc) rnum from product p where pro_check = 'y')
			where rnum >= #{startNo} and rnum <= ${endNo}
		]]>
	</select>
	
	
	<!-- ::: product_cont ::: -->
	
	<select id="productCont" parameterType="int" resultType="com.spring.model.ProductDTO">
		select * from product where pro_no = #{no}
	</select>
	
	<select id="proReviewTotalRecord" parameterType="int" resultType="int">
		select count(*) from review where review_pro = #{no}
	</select>
	
	<select id="proReviewList" parameterType="com.spring.model.PageDTO" resultType="com.spring.model.ReviewDTO">
		<![CDATA[ 
			select * from (select r.*, row_number() over(order by review_no desc) rnum from review r where review_pro = #{no})
			where rnum >= #{startNo} and rnum <= ${endNo}
		]]>
	</select>
	
	<select id="proReviewPhotoCount" parameterType="int" resultType="int">
		select count(*) from review where review_pro = #{no} and review_img is not null
	</select>
	
	<select id="proReviewPhotoList" parameterType="com.spring.model.PageDTO" resultType="com.spring.model.ReviewDTO">
		<![CDATA[ 
			select * from (select r.*, row_number() over(order by review_no desc) rnum from review r where review_pro = #{no} and review_img is not null)
			where rnum >= #{startNo} and rnum <= ${endNo}
		]]>
	</select>	
	
	<select id="totalStar" parameterType="int" resultType="int">
		select nvl(sum(review_star),0) from review where review_pro = #{no}
	</select>
	
	<select id="proQnaTotalRecord" parameterType="int" resultType="int">
		select count(*) from qna where qna_pro = #{no}
	</select>
	
	<select id="proQnaList" parameterType="com.spring.model.PageDTO" resultType="com.spring.model.QnaDTO">
		<![CDATA[ 
			select * from (select q.*, row_number() over(order by qna_group desc, qna_step) rnum from qna q where qna_pro = #{no})
			where rnum >= #{startNo} and rnum <= ${endNo}
		]]>
	</select>
	
	<insert id="writeProQna" parameterType="com.spring.model.QnaDTO">
		<selectKey keyProperty="qna_no" resultType="int" order="BEFORE">
			select max(qna_no)+1 from qna
		</selectKey>
		insert into qna values(#{qna_no}, #{qna_writer}, #{qna_pro}, #{qna_title}, #{qna_cont}, null, #{qna_category_no}, sysdate, ${qna_no}, default, #{qna_secret})
	</insert>
	
	<delete id="deleteQna" parameterType="int">
		delete from qna where qna_no = #{no}
	</delete>
	
	<select id="qnaCont" parameterType="int" resultType="com.spring.model.QnaDTO">
		select * from qna where qna_no = #{no}
	</select>
	
	<update id="updateProQna" parameterType="com.spring.model.QnaDTO">
		update qna set qna_title = #{qna_title}, qna_cont = #{qna_cont}, qna_secret = ${qna_secret} where qna_no = ${qna_no}
	</update>
	
	
	<!-- ::: recent ::: -->
	
	<resultMap type="com.spring.model.ProductDTO" id="product">
		<result column="pro_no" property="pro_no" />
		<result column="pro_name" property="pro_name" />
		<result column="pro_category" property="pro_category" />
		<result column="pro_output_price" property="pro_output_price" />
		<result column="pro_tag" property="pro_tag" />
		<result column="pro_check" property="pro_check" />
		<result column="pro_img" property="pro_img" />
		<result column="pro_cont" property="pro_cont" />
	</resultMap>

	<resultMap type="com.spring.model.ProductRecentDTO" id="recent">
		<result column="recent_no" property="recent_no" />
		<result column="recent_mem" property="recent_mem" />
		<result column="recent_product" property="recent_product" />
		<result column="recent_regdate" property="recent_regdate" />
		<collection property="productDTO" resultMap="product" />
	</resultMap>
		
	<select id="recentList" parameterType="String" resultMap="recent">
		<![CDATA[ 
		select * from
		(select p.*, r.*, row_number() over(order by r.recent_regdate desc) rnum 
		from product p join product_recent r
		on p.pro_no = r.recent_product
		where r.recent_mem = #{id}) where rnum >= 1 and rnum <= 10
		]]>
	</select>
	
	<select id="recentCheck" parameterType="String" resultType="int">
		select count(*) from product_recent where recent_mem = #{id}
	</select>
	
	<insert id="addRecent" parameterType="com.spring.model.ProductRecentDTO">
		<selectKey resultType="int" keyProperty="recent_no" order="BEFORE">
			select max(recent_no)+1 from product_recent
		</selectKey>
		insert into product_recent values(#{recent_no}, #{recent_mem}, #{recent_product}, sysdate)
	</insert>
	
	<select id="recentProCheck" parameterType="com.spring.model.ProductRecentDTO" resultType="int">
		select count(*) from product_recent where recent_mem = #{recent_mem} and recent_product = #{recent_product} 
	</select>
	
	<update id="updateRecentPro" parameterType="com.spring.model.ProductRecentDTO">
		update product_recent set recent_regdate = sysdate where recent_mem = #{recent_mem} and recent_product = #{recent_product} 
	</update>
	
	<delete id="deleteRecent" parameterType="com.spring.model.ProductRecentDTO">
		delete from product_recent where recent_mem = #{recent_mem} and recent_product = #{recent_product} 
	</delete>
	
	
	<!-- ::: search ::: -->

	<select id="searchList" parameterType="com.spring.model.PageDTO" resultType="com.spring.model.ProductDTO">
		<![CDATA[ 
			select * from (select p.*, row_number() over(order by pro_no desc) rnum from product p 
			where pro_check = 'y' and pro_name like '%' || #{keyword} || '%' or pro_tag like '%' || #{keyword} || '%')
			where rnum >= #{startNo} and rnum <= ${endNo}
		]]>
	</select>
	
	<select id="searchListCount" parameterType="String" resultType="int">
		select count(*) from product p 
			where pro_check = 'y' and pro_name like '%' || #{keyword} || '%' or pro_tag like '%' || #{keyword} || '%'
	</select>
	
	<select id="searchTagCount" parameterType="String" resultType="int">
		select count(*) from product p 
			where pro_check = 'y' and pro_tag like '%' || #{keyword} || '%'
	</select>
	
	<select id="searchTagList" parameterType="com.spring.model.PageDTO" resultType="com.spring.model.ProductDTO">
		<![CDATA[ 
			select * from (select p.*, row_number() over(order by pro_no desc) rnum from product p 
			where pro_check = 'y' and pro_tag like '%' || #{keyword} || '%')
			where rnum >= #{startNo} and rnum <= ${endNo}
		]]>
	</select>
	
	<insert id="addLike" parameterType="java.util.HashMap">
		<selectKey keyProperty="like_no" resultType="int" order="BEFORE">
			select max(like_no)+1 from product_like
		</selectKey>
		insert into product_like values(#{like_no}, #{user_id}, #{product_no}, sysdate)
	</insert>
	
	
	
</mapper>